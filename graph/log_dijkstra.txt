
root@5adabb086498:/workdir/code/algorithm# 
root@5adabb086498:/workdir/code/algorithm# python3 shortest_path_dijkstra.py 
[input] num of node, edge: 6 11
n: 6, m: 11
start node number: 1
graph row0 input: 1 2 2
graph row1 input: 1 3 5
graph row2 input: 1 4 1
graph row3 input: 2 3 3
graph row4 input: 2 4 2
graph row5 input: 3 2 3
graph row6 input: 3 6 5
graph row7 input: 4 3 3
graph row8 input: 4 5 1
graph row9 input: 5 3 1
graph row10 input: 5 6 2
[[], [(2, 2), (3, 5), (4, 1)], [(3, 3), (4, 2)], [(2, 3), (6, 5)], [(3, 3), (5, 1)], [(3, 1), (6, 2)], []]
root@5adabb086498:/workdir/code/algorithm# 
root@5adabb086498:/workdir/code/algorithm# 
root@5adabb086498:/workdir/code/algorithm# python3 shortest_path_dijkstra.py 
[input] num of node, edge: 6 11
n: 6, m: 11
start node number: 1
graph row0 input(node_n, cost): 1 2 2
graph row1 input(node_n, cost): 1 3 5
graph row2 input(node_n, cost): 1 4 1
graph row3 input(node_n, cost): 2 3 3
graph row4 input(node_n, cost): 2 4 2
graph row5 input(node_n, cost): 3 2 3
graph row6 input(node_n, cost): 3 6 5
graph row7 input(node_n, cost): 4 3 3
graph row8 input(node_n, cost): 4 5 1
graph row9 input(node_n, cost): 5 3 1
graph row10 input(node_n, cost): 5 6 2
===== print shortest path =====
0
2
3
1
2
4
root@5adabb086498:/workdir/code/algorithm# 